{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","expression","setExpression","answer","setAnswer","display","symbol","prev","length","test","calculate","eval","allClear","clear","split","slice","join","className","type","value","placeholder","disabled","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"u2BAGA,SAASA,MACP,cAAoCC,oDAAS,IAA7C,mLAAOC,WAAP,cAAmBC,cAAnB,cACA,WAA4BF,oDAAS,GAArC,oLAAOG,OAAP,cAAeC,UAAf,cAEMC,QAAU,SAACC,GACfJ,eAAc,SAAAK,GAAI,OAAIA,EAAOD,KACU,MAApCL,WAAWA,WAAWO,OAAO,KAC3B,SAASC,KAAKH,GACfJ,cAAcI,GAEdJ,cAAcC,OAASG,IAGN,MAAlBL,WAAW,IAAgC,MAAlBA,WAAW,IACrCC,cAAc,IAEb,QAAQO,KAAKR,WAAW,KACzBC,cAAc,IAEb,SAASO,KAAKR,WAAWA,WAAWO,OAAO,KAAO,UAAUC,KAAKH,IAClEJ,cAAcD,aAIZS,UAAY,SAAZA,YACD,UAAUD,KAAKR,WAAWA,WAAWO,OAAO,KAC7CJ,UAAU,GACVF,cAAcD,cAEhBG,UAAUO,KAAKV,aACfC,eAAc,SAAAK,GAAI,OAAIA,EAAO,SAIzBK,SAAW,WACfV,cAAc,IACdE,UAAU,IAGNS,MAAQ,WACZX,eAAc,SAAAK,GAAI,OAAIA,EAAKO,MAAM,IAAIC,MAAM,EAAGR,EAAKC,OAAO,GAAGQ,KAAK,OAClEZ,UAAU,IAGZ,OACE,mEAAKa,UAAU,YAAf,UACI,mEAAKA,UAAU,OAAf,UACA,mEAAKA,UAAU,UAAf,UACE,oEAAOC,KAAK,OAAOC,MAAOlB,WAAYmB,YAAY,IAAIC,UAAQ,IAC9D,kEAAKJ,UAAU,QAAf,SAAwBd,YAE1B,kEAAKmB,QAAST,MAAOI,UAAU,qBAA/B,eACA,kEAAKK,QAASV,SAAUK,UAAU,sBAAlC,gBACA,kEAAKK,QAAS,kBAAMjB,QAAQ,MAAMY,UAAU,gBAA5C,eACA,kEAAKK,QAAS,kBAAMjB,QAAQ,MAAMY,UAAU,kBAA5C,eACA,kEAAKK,QAAS,kBAAMjB,QAAQ,MAAMY,UAAU,4BAA5C,eACA,kEAAKK,QAAS,kBAAMjB,QAAQ,MAAMY,UAAU,4BAA5C,eACA,kEAAKK,QAAS,kBAAMjB,QAAQ,MAAMY,UAAU,2BAA5C,eACA,kEAAKK,QAAS,kBAAMjB,QAAQ,MAAMY,UAAU,kBAA5C,eACA,kEAAKK,QAAS,kBAAMjB,QAAQ,MAAMY,UAAU,2BAA5C,eACA,kEAAKK,QAAS,kBAAMjB,QAAQ,MAAMY,UAAU,2BAA5C,eACA,kEAAKK,QAAS,kBAAMjB,QAAQ,MAAMY,UAAU,0BAA5C,eACA,kEAAKK,QAAS,kBAAMjB,QAAQ,MAAMY,UAAU,iBAA5C,eACA,kEAAKK,QAAS,kBAAMjB,QAAQ,MAAMY,UAAU,0BAA5C,eACA,kEAAKK,QAAS,kBAAMjB,QAAQ,MAAMY,UAAU,0BAA5C,eACA,kEAAKK,QAAS,kBAAMjB,QAAQ,MAAMY,UAAU,4BAA5C,eACA,kEAAKK,QAASZ,UAAWO,UAAU,uBAAnC,eACA,kEAAKK,QAAS,kBAAMjB,QAAQ,MAAMY,UAAU,2BAA5C,eACA,kEAAKK,QAAS,kBAAMjB,QAAQ,MAAMY,UAAU,0BAA5C,kBAEF,uGAKSlB,2B,gIClEAwB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACnC,EAAA,EAAD,MAEFoC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.da7c35f6.chunk.js","sourcesContent":["import {useState} from \"react\";\nimport './App.css';\n\nfunction App() {\n  const [expression, setExpression] = useState(\"\");\n  const [answer, setAnswer] = useState(0);\n\n  const display = (symbol) => {\n    setExpression(prev => prev + symbol);\n    if(expression[expression.length-1] === \"=\"){\n      if(/[0-9.]/.test(symbol)){\n        setExpression(symbol);\n      } else {\n        setExpression(answer + symbol);\n      }\n    }\n    if(expression[0] === \"0\" && expression[1] === \"0\"){\n      setExpression(\"\");\n    }\n    if(/[/*=]/.test(expression[0])){\n      setExpression(\"\");\n    }\n    if(/[/*+-]/.test(expression[expression.length-1]) && /[/*=+-]/.test(symbol)){\n      setExpression(expression);\n    }\n  };\n\n  const calculate = () => {\n    if(/[/*=+-]/.test(expression[expression.length-1])){\n      setAnswer(0);\n      setExpression(expression);\n    } else {\n    setAnswer(eval(expression));\n    setExpression(prev => prev + \"=\");\n    }\n  };\n\n  const allClear = () => {\n    setExpression(\"\");\n    setAnswer(0);\n  };\n\n  const clear = () => {\n    setExpression(prev => prev.split(\"\").slice(0, prev.length-1).join(\"\"));\n    setAnswer(0);\n  }\n\n  return (\n    <div className=\"container\">\n        <div className=\"grid\">\n        <div className=\"display\">\n          <input type=\"text\" value={expression} placeholder=\"0\" disabled/>\n          <div className=\"total\">{answer}</div>\n        </div>\n        <div onClick={clear} className=\"padButton C tomato\">C</div>\n        <div onClick={allClear} className=\"padButton AC tomato\">AC</div>\n        <div onClick={() => display(\"/\")} className=\"padButton div\">/</div>\n        <div onClick={() => display(\"*\")} className=\"padButton times\">x</div>\n        <div onClick={() => display(\"7\")} className=\"padButton seven dark-grey\">7</div>\n        <div onClick={() => display(\"8\")} className=\"padButton eight dark-grey\">8</div>\n        <div onClick={() => display(\"9\")} className=\"padButton nine dark-grey\">9</div>\n        <div onClick={() => display(\"-\")} className=\"padButton minus\">-</div>\n        <div onClick={() => display(\"4\")} className=\"padButton four dark-grey\">4</div>\n        <div onClick={() => display(\"5\")} className=\"padButton five dark-grey\">5</div>\n        <div onClick={() => display(\"6\")} className=\"padButton six dark-grey\">6</div>\n        <div onClick={() => display(\"+\")} className=\"padButton plus\">+</div>\n        <div onClick={() => display(\"1\")} className=\"padButton one dark-grey\">1</div>\n        <div onClick={() => display(\"2\")} className=\"padButton two dark-grey\">2</div>\n        <div onClick={() => display(\"3\")} className=\"padButton three dark-grey\">3</div>\n        <div onClick={calculate} className=\"padButton equal blue\">=</div>\n        <div onClick={() => display(\"0\")} className=\"padButton zero dark-grey\">0</div>\n        <div onClick={() => display(\".\")} className=\"padButton dot dark-grey\">.</div>\n      </div>\n      <footer>by Willian Pessoa</footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}